import os
import asyncio
from flask import Flask, request
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
# –ù–µ –∑–∞–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render (Environment Variables).
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
flask_app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Application.
# –ú—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º updater, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ–º —Å –≤–µ–±—Ö—É–∫–∞–º–∏.
bot_app = Application.builder().token(TOKEN).build()

# --- –•—ç–Ω–¥–ª–µ—Ä—ã (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π) ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π."""
    keyboard = [[KeyboardButton("‚úçÔ∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤—Ä–∞—á–∞.\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–æ–∫—Ç–æ—Ä—É:",
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user = update.effective_user
    text = update.message.text

    if text == "‚úçÔ∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å üëá")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –í—Ä–∞—á –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç –µ–≥–æ üë®‚Äç‚öïÔ∏è")
    msg = f"üì© –í–æ–ø—Ä–æ—Å –æ—Ç @{user.username or user.id}:\n\n{text}"
    await context.bot.send_message(chat_id=ADMIN_ID, text=msg)

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã –≤ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
bot_app.add_handler(CommandHandler("start", start))
bot_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# --- Webhook ---

# –≠—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å POST-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram.
@flask_app.route("/", methods=["POST"])
async def webhook_handler():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram."""
    async with bot_app:
        await bot_app.process_update(
            Update.de_json(request.get_json(force=True), bot_app.bot)
        )
    return "ok"

# --- –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

if __name__ == '__main__':
    # –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç Flask-—Å–µ—Ä–≤–µ—Ä –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏.
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–∞ Render –æ–Ω –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è Gunicorn –∏–ª–∏ Uvicorn.
    flask_app.run(port=8000)
